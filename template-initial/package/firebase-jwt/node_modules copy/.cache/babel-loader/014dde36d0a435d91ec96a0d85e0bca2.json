{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default class FirestorePath {\n  static fromName(name) {\n    const parts = name.split('/');\n    return new FirestorePath(parts);\n  }\n\n  constructor() {\n    let pathComponents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    this._parts = pathComponents;\n  }\n\n  get id() {\n    return this._parts.length ? this._parts[this._parts.length - 1] : '';\n  }\n\n  get isDocument() {\n    return this._parts.length % 2 === 0;\n  }\n\n  get isCollection() {\n    return this._parts.length % 2 === 1;\n  }\n\n  get relativeName() {\n    return this._parts.join('/');\n  }\n\n  child(relativePath) {\n    return new FirestorePath(this._parts.concat(relativePath.split('/')));\n  }\n\n  parent() {\n    return this._parts.length > 1 ? new FirestorePath(this._parts.slice(0, this._parts.length - 1)) : null;\n  }\n\n}","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/node_modules/@react-native-firebase/firestore/lib/FirestorePath.js"],"names":["FirestorePath","fromName","name","parts","split","constructor","pathComponents","_parts","id","length","isDocument","isCollection","relativeName","join","child","relativePath","concat","parent","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,MAAMA,aAAN,CAAoB;AAClB,SAARC,QAAQ,CAACC,IAAD,EAAO;AACpB,UAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;AACA,WAAO,IAAIJ,aAAJ,CAAkBG,KAAlB,CAAP;AACD;;AAEDE,EAAAA,WAAW,GAAsB;AAAA,QAArBC,cAAqB,uEAAJ,EAAI;AAC/B,SAAKC,MAAL,GAAcD,cAAd;AACD;;AAEK,MAAFE,EAAE,GAAG;AACP,WAAO,KAAKD,MAAL,CAAYE,MAAZ,GAAqB,KAAKF,MAAL,CAAY,KAAKA,MAAL,CAAYE,MAAZ,GAAqB,CAAjC,CAArB,GAA2D,EAAlE;AACD;;AAEa,MAAVC,UAAU,GAAG;AACf,WAAO,KAAKH,MAAL,CAAYE,MAAZ,GAAqB,CAArB,KAA2B,CAAlC;AACD;;AAEe,MAAZE,YAAY,GAAG;AACjB,WAAO,KAAKJ,MAAL,CAAYE,MAAZ,GAAqB,CAArB,KAA2B,CAAlC;AACD;;AAEe,MAAZG,YAAY,GAAG;AACjB,WAAO,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,GAAjB,CAAP;AACD;;AAEDC,EAAAA,KAAK,CAACC,YAAD,EAAe;AAClB,WAAO,IAAIf,aAAJ,CAAkB,KAAKO,MAAL,CAAYS,MAAZ,CAAmBD,YAAY,CAACX,KAAb,CAAmB,GAAnB,CAAnB,CAAlB,CAAP;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,MAAL,CAAYE,MAAZ,GAAqB,CAArB,GACH,IAAIT,aAAJ,CAAkB,KAAKO,MAAL,CAAYW,KAAZ,CAAkB,CAAlB,EAAqB,KAAKX,MAAL,CAAYE,MAAZ,GAAqB,CAA1C,CAAlB,CADG,GAEH,IAFJ;AAGD;;AAlCgC","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class FirestorePath {\n  static fromName(name) {\n    const parts = name.split('/');\n    return new FirestorePath(parts);\n  }\n\n  constructor(pathComponents = []) {\n    this._parts = pathComponents;\n  }\n\n  get id() {\n    return this._parts.length ? this._parts[this._parts.length - 1] : '';\n  }\n\n  get isDocument() {\n    return this._parts.length % 2 === 0;\n  }\n\n  get isCollection() {\n    return this._parts.length % 2 === 1;\n  }\n\n  get relativeName() {\n    return this._parts.join('/');\n  }\n\n  child(relativePath) {\n    return new FirestorePath(this._parts.concat(relativePath.split('/')));\n  }\n\n  parent() {\n    return this._parts.length > 1\n      ? new FirestorePath(this._parts.slice(0, this._parts.length - 1))\n      : null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}