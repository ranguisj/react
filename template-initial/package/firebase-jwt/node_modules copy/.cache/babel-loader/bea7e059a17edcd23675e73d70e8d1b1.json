{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport default class NativeFirebaseError extends Error {\n  static fromEvent(errorEvent, namespace, stack) {\n    return new NativeFirebaseError({\n      userInfo: errorEvent\n    }, stack || new Error().stack, namespace);\n  }\n\n  constructor(nativeError, jsStack, namespace) {\n    super();\n    const {\n      userInfo\n    } = nativeError;\n    Object.defineProperty(this, 'namespace', {\n      enumerable: false,\n      value: namespace\n    });\n    Object.defineProperty(this, 'code', {\n      enumerable: false,\n      value: `${this.namespace}/${userInfo.code || 'unknown'}`\n    });\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      value: `[${this.code}] ${userInfo.message || nativeError.message}`\n    });\n    Object.defineProperty(this, 'jsStack', {\n      enumerable: false,\n      value: jsStack\n    });\n    Object.defineProperty(this, 'userInfo', {\n      enumerable: false,\n      value: userInfo\n    });\n    Object.defineProperty(this, 'nativeErrorCode', {\n      enumerable: false,\n      value: userInfo.nativeErrorCode || null\n    });\n    Object.defineProperty(this, 'nativeErrorMessage', {\n      enumerable: false,\n      value: userInfo.nativeErrorMessage || null\n    });\n    this.stack = NativeFirebaseError.getStackWithMessage(`NativeFirebaseError: ${this.message}`, this.jsStack); // Unused\n    // this.nativeStackIOS = nativeError.nativeStackIOS;\n    // this.nativeStackAndroid = nativeError.nativeStackAndroid;\n  }\n  /**\n   * Build a stack trace that includes JS stack prior to calling the native method.\n   *\n   * @returns {string}\n   */\n\n\n  static getStackWithMessage(message, jsStack) {\n    return [message, ...jsStack.split('\\n').slice(2, 13)].join('\\n');\n  }\n\n}","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/node_modules/@react-native-firebase/app/lib/internal/NativeFirebaseError.js"],"names":["NativeFirebaseError","Error","fromEvent","errorEvent","namespace","stack","userInfo","constructor","nativeError","jsStack","Object","defineProperty","enumerable","value","code","message","nativeErrorCode","nativeErrorMessage","getStackWithMessage","split","slice","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,MAAMA,mBAAN,SAAkCC,KAAlC,CAAwC;AACrC,SAATC,SAAS,CAACC,UAAD,EAAaC,SAAb,EAAwBC,KAAxB,EAA+B;AAC7C,WAAO,IAAIL,mBAAJ,CAAwB;AAAEM,MAAAA,QAAQ,EAAEH;AAAZ,KAAxB,EAAkDE,KAAK,IAAI,IAAIJ,KAAJ,GAAYI,KAAvE,EAA8ED,SAA9E,CAAP;AACD;;AAEDG,EAAAA,WAAW,CAACC,WAAD,EAAcC,OAAd,EAAuBL,SAAvB,EAAkC;AAC3C;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAeE,WAArB;AAEAE,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;AACvCC,MAAAA,UAAU,EAAE,KAD2B;AAEvCC,MAAAA,KAAK,EAAET;AAFgC,KAAzC;AAKAM,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;AAClCC,MAAAA,UAAU,EAAE,KADsB;AAElCC,MAAAA,KAAK,EAAG,GAAE,KAAKT,SAAU,IAAGE,QAAQ,CAACQ,IAAT,IAAiB,SAAU;AAFrB,KAApC;AAKAJ,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACrCC,MAAAA,UAAU,EAAE,KADyB;AAErCC,MAAAA,KAAK,EAAG,IAAG,KAAKC,IAAK,KAAIR,QAAQ,CAACS,OAAT,IAAoBP,WAAW,CAACO,OAAQ;AAF5B,KAAvC;AAKAL,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACrCC,MAAAA,UAAU,EAAE,KADyB;AAErCC,MAAAA,KAAK,EAAEJ;AAF8B,KAAvC;AAKAC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC;AACtCC,MAAAA,UAAU,EAAE,KAD0B;AAEtCC,MAAAA,KAAK,EAAEP;AAF+B,KAAxC;AAKAI,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,iBAA5B,EAA+C;AAC7CC,MAAAA,UAAU,EAAE,KADiC;AAE7CC,MAAAA,KAAK,EAAEP,QAAQ,CAACU,eAAT,IAA4B;AAFU,KAA/C;AAKAN,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,oBAA5B,EAAkD;AAChDC,MAAAA,UAAU,EAAE,KADoC;AAEhDC,MAAAA,KAAK,EAAEP,QAAQ,CAACW,kBAAT,IAA+B;AAFU,KAAlD;AAKA,SAAKZ,KAAL,GAAaL,mBAAmB,CAACkB,mBAApB,CACV,wBAAuB,KAAKH,OAAQ,EAD1B,EAEX,KAAKN,OAFM,CAAb,CAvC2C,CA4C3C;AACA;AACA;AACD;AAED;AACF;AACA;AACA;AACA;;;AAC4B,SAAnBS,mBAAmB,CAACH,OAAD,EAAUN,OAAV,EAAmB;AAC3C,WAAO,CAACM,OAAD,EAAU,GAAGN,OAAO,CAACU,KAAR,CAAc,IAAd,EAAoBC,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAb,EAA+CC,IAA/C,CAAoD,IAApD,CAAP;AACD;;AA7DoD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class NativeFirebaseError extends Error {\n  static fromEvent(errorEvent, namespace, stack) {\n    return new NativeFirebaseError({ userInfo: errorEvent }, stack || new Error().stack, namespace);\n  }\n\n  constructor(nativeError, jsStack, namespace) {\n    super();\n    const { userInfo } = nativeError;\n\n    Object.defineProperty(this, 'namespace', {\n      enumerable: false,\n      value: namespace,\n    });\n\n    Object.defineProperty(this, 'code', {\n      enumerable: false,\n      value: `${this.namespace}/${userInfo.code || 'unknown'}`,\n    });\n\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      value: `[${this.code}] ${userInfo.message || nativeError.message}`,\n    });\n\n    Object.defineProperty(this, 'jsStack', {\n      enumerable: false,\n      value: jsStack,\n    });\n\n    Object.defineProperty(this, 'userInfo', {\n      enumerable: false,\n      value: userInfo,\n    });\n\n    Object.defineProperty(this, 'nativeErrorCode', {\n      enumerable: false,\n      value: userInfo.nativeErrorCode || null,\n    });\n\n    Object.defineProperty(this, 'nativeErrorMessage', {\n      enumerable: false,\n      value: userInfo.nativeErrorMessage || null,\n    });\n\n    this.stack = NativeFirebaseError.getStackWithMessage(\n      `NativeFirebaseError: ${this.message}`,\n      this.jsStack,\n    );\n\n    // Unused\n    // this.nativeStackIOS = nativeError.nativeStackIOS;\n    // this.nativeStackAndroid = nativeError.nativeStackAndroid;\n  }\n\n  /**\n   * Build a stack trace that includes JS stack prior to calling the native method.\n   *\n   * @returns {string}\n   */\n  static getStackWithMessage(message, jsStack) {\n    return [message, ...jsStack.split('\\n').slice(2, 13)].join('\\n');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}