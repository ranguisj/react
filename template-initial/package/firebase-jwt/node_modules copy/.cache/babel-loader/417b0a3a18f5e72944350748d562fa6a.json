{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  topbarBg: \"primary\",\n  customizerSidebar: false,\n  isRTL: false,\n  isDark: false,\n  isMiniSidebar: false,\n  sidebarBg: \"white\",\n  isTopbarFixed: true,\n  isMobileSidebar: false,\n  isSidebarFixed: true,\n  isLayoutHorizontal: false\n};\nexport const CustomizerSlice = createSlice({\n  name: \"customizer\",\n  initialState,\n  reducers: {\n    ChangeTopbarColor: (state, action) => {\n      state.topbarBg = action.payload;\n    },\n    ToggleCustomizer: state => {\n      state.customizerSidebar = !state.customizerSidebar;\n    },\n    ChangeDirection: (state, action) => {\n      state.isRTL = action.payload;\n    },\n    ChangeDarkMode: (state, action) => {\n      state.isDark = action.payload;\n    },\n    ToggleMiniSidebar: state => {\n      state.isMiniSidebar = !state.isMiniSidebar;\n    },\n    ChangeSidebarColor: (state, action) => {\n      state.sidebarBg = action.payload;\n    },\n    ToggleTopbar: (state, action) => {\n      state.isTopbarFixed = action.payload;\n    },\n    ToggleMobileSidebar: state => {\n      state.isMobileSidebar = !state.isMobileSidebar;\n    },\n    FixedSidebar: state => {\n      state.isSidebarFixed = !state.isSidebarFixed;\n    },\n    ToggleHorizontal: state => {\n      state.isLayoutHorizontal = !state.isLayoutHorizontal;\n    }\n  }\n});\nexport const {\n  ChangeTopbarColor,\n  ToggleCustomizer,\n  ChangeDirection,\n  ChangeDarkMode,\n  ToggleMiniSidebar,\n  ChangeSidebarColor,\n  ToggleTopbar,\n  ToggleMobileSidebar,\n  FixedSidebar,\n  ToggleHorizontal\n} = CustomizerSlice.actions;\nexport default CustomizerSlice.reducer;","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/store/customizer/CustomizerSlice.js"],"names":["createSlice","initialState","topbarBg","customizerSidebar","isRTL","isDark","isMiniSidebar","sidebarBg","isTopbarFixed","isMobileSidebar","isSidebarFixed","isLayoutHorizontal","CustomizerSlice","name","reducers","ChangeTopbarColor","state","action","payload","ToggleCustomizer","ChangeDirection","ChangeDarkMode","ToggleMiniSidebar","ChangeSidebarColor","ToggleTopbar","ToggleMobileSidebar","FixedSidebar","ToggleHorizontal","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,SADS;AAEnBC,EAAAA,iBAAiB,EAAE,KAFA;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,MAAM,EAAE,KAJW;AAKnBC,EAAAA,aAAa,EAAE,KALI;AAMnBC,EAAAA,SAAS,EAAE,OANQ;AAOnBC,EAAAA,aAAa,EAAE,IAPI;AAQnBC,EAAAA,eAAe,EAAE,KARE;AASnBC,EAAAA,cAAc,EAAE,IATG;AAUnBC,EAAAA,kBAAkB,EAAE;AAVD,CAArB;AAaA,OAAO,MAAMC,eAAe,GAAGZ,WAAW,CAAC;AACzCa,EAAAA,IAAI,EAAE,YADmC;AAEzCZ,EAAAA,YAFyC;AAGzCa,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACd,QAAN,GAAiBe,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,gBAAgB,EAAGH,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACb,iBAAN,GAA0B,CAACa,KAAK,CAACb,iBAAjC;AACD,KANO;AAORiB,IAAAA,eAAe,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACZ,KAAN,GAAca,MAAM,CAACC,OAArB;AACD,KATO;AAURG,IAAAA,cAAc,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACX,MAAN,GAAeY,MAAM,CAACC,OAAtB;AACD,KAZO;AAaRI,IAAAA,iBAAiB,EAAGN,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACV,aAAN,GAAsB,CAACU,KAAK,CAACV,aAA7B;AACD,KAfO;AAgBRiB,IAAAA,kBAAkB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACC,OAAzB;AACD,KAlBO;AAmBRM,IAAAA,YAAY,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACR,aAAN,GAAsBS,MAAM,CAACC,OAA7B;AACD,KArBO;AAsBRO,IAAAA,mBAAmB,EAAGT,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACP,eAAN,GAAwB,CAACO,KAAK,CAACP,eAA/B;AACD,KAxBO;AAyBRiB,IAAAA,YAAY,EAAGV,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACN,cAAN,GAAuB,CAACM,KAAK,CAACN,cAA9B;AACD,KA3BO;AA4BRiB,IAAAA,gBAAgB,EAAGX,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACL,kBAAN,GAA2B,CAACK,KAAK,CAACL,kBAAlC;AACD;AA9BO;AAH+B,CAAD,CAAnC;AAqCP,OAAO,MAAM;AACXI,EAAAA,iBADW;AAEXI,EAAAA,gBAFW;AAGXC,EAAAA,eAHW;AAIXC,EAAAA,cAJW;AAKXC,EAAAA,iBALW;AAMXC,EAAAA,kBANW;AAOXC,EAAAA,YAPW;AAQXC,EAAAA,mBARW;AASXC,EAAAA,YATW;AAUXC,EAAAA;AAVW,IAWTf,eAAe,CAACgB,OAXb;AAaP,eAAehB,eAAe,CAACiB,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  topbarBg: \"primary\",\r\n  customizerSidebar: false,\r\n  isRTL: false,\r\n  isDark: false,\r\n  isMiniSidebar: false,\r\n  sidebarBg: \"white\",\r\n  isTopbarFixed: true,\r\n  isMobileSidebar: false,\r\n  isSidebarFixed: true,\r\n  isLayoutHorizontal: false,\r\n};\r\n\r\nexport const CustomizerSlice = createSlice({\r\n  name: \"customizer\",\r\n  initialState,\r\n  reducers: {\r\n    ChangeTopbarColor: (state, action) => {\r\n      state.topbarBg = action.payload;\r\n    },\r\n    ToggleCustomizer: (state) => {\r\n      state.customizerSidebar = !state.customizerSidebar;\r\n    },\r\n    ChangeDirection: (state, action) => {\r\n      state.isRTL = action.payload;\r\n    },\r\n    ChangeDarkMode: (state, action) => {\r\n      state.isDark = action.payload;\r\n    },\r\n    ToggleMiniSidebar: (state) => {\r\n      state.isMiniSidebar = !state.isMiniSidebar;\r\n    },\r\n    ChangeSidebarColor: (state, action) => {\r\n      state.sidebarBg = action.payload;\r\n    },\r\n    ToggleTopbar: (state, action) => {\r\n      state.isTopbarFixed = action.payload;\r\n    },\r\n    ToggleMobileSidebar: (state) => {\r\n      state.isMobileSidebar = !state.isMobileSidebar;\r\n    },\r\n    FixedSidebar: (state) => {\r\n      state.isSidebarFixed = !state.isSidebarFixed;\r\n    },\r\n    ToggleHorizontal: (state) => {\r\n      state.isLayoutHorizontal = !state.isLayoutHorizontal;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  ChangeTopbarColor,\r\n  ToggleCustomizer,\r\n  ChangeDirection,\r\n  ChangeDarkMode,\r\n  ToggleMiniSidebar,\r\n  ChangeSidebarColor,\r\n  ToggleTopbar,\r\n  ToggleMobileSidebar,\r\n  FixedSidebar,\r\n  ToggleHorizontal,\r\n} = CustomizerSlice.actions;\r\n\r\nexport default CustomizerSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}