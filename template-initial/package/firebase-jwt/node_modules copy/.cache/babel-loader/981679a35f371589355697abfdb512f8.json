{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { generateFirestoreId, isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, { provideCollectionReferenceClass } from './FirestoreDocumentReference';\nimport FirestoreQuery from './FirestoreQuery';\nimport FirestoreQueryModifiers from './FirestoreQueryModifiers';\nexport default class FirestoreCollectionReference extends FirestoreQuery {\n  constructor(firestore, collectionPath) {\n    super(firestore, collectionPath, new FirestoreQueryModifiers());\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parent = this._collectionPath.parent();\n\n    if (!parent) {\n      return null;\n    }\n\n    return new FirestoreDocumentReference(this._firestore, parent);\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  add(data) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().collection().add(*) 'data' must be an object.\");\n    }\n\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || generateFirestoreId();\n\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error(\"firebase.firestore().collection().doc(*) 'documentPath' must point to a document.\");\n    }\n\n    return new FirestoreDocumentReference(this._firestore, path);\n  }\n\n} // To avoid React Native require cycle warnings\n\nprovideCollectionReferenceClass(FirestoreCollectionReference);","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/node_modules/@react-native-firebase/firestore/lib/FirestoreCollectionReference.js"],"names":["generateFirestoreId","isObject","FirestoreDocumentReference","provideCollectionReferenceClass","FirestoreQuery","FirestoreQueryModifiers","FirestoreCollectionReference","constructor","firestore","collectionPath","id","_collectionPath","parent","_firestore","path","relativeName","add","data","Error","documentRef","doc","set","then","Promise","resolve","documentPath","newPath","child","isDocument"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,mBAAT,EAA8BC,QAA9B,QAA8C,uCAA9C;AACA,OAAOC,0BAAP,IACEC,+BADF,QAEO,8BAFP;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAEA,eAAe,MAAMC,4BAAN,SAA2CF,cAA3C,CAA0D;AACvEG,EAAAA,WAAW,CAACC,SAAD,EAAYC,cAAZ,EAA4B;AACrC,UAAMD,SAAN,EAAiBC,cAAjB,EAAiC,IAAIJ,uBAAJ,EAAjC;AACD;;AAEK,MAAFK,EAAE,GAAG;AACP,WAAO,KAAKC,eAAL,CAAqBD,EAA5B;AACD;;AAES,MAANE,MAAM,GAAG;AACX,UAAMA,MAAM,GAAG,KAAKD,eAAL,CAAqBC,MAArB,EAAf;;AACA,QAAI,CAACA,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AACD,WAAO,IAAIV,0BAAJ,CAA+B,KAAKW,UAApC,EAAgDD,MAAhD,CAAP;AACD;;AAEO,MAAJE,IAAI,GAAG;AACT,WAAO,KAAKH,eAAL,CAAqBI,YAA5B;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAO;AACR,QAAI,CAAChB,QAAQ,CAACgB,IAAD,CAAb,EAAqB;AACnB,YAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,UAAMC,WAAW,GAAG,KAAKC,GAAL,EAApB;AACA,WAAOD,WAAW,CAACE,GAAZ,CAAgBJ,IAAhB,EAAsBK,IAAtB,CAA2B,MAAMC,OAAO,CAACC,OAAR,CAAgBL,WAAhB,CAAjC,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACK,YAAD,EAAe;AAChB,UAAMC,OAAO,GAAGD,YAAY,IAAIzB,mBAAmB,EAAnD;;AACA,UAAMc,IAAI,GAAG,KAAKH,eAAL,CAAqBgB,KAArB,CAA2BD,OAA3B,CAAb;;AAEA,QAAI,CAACZ,IAAI,CAACc,UAAV,EAAsB;AACpB,YAAM,IAAIV,KAAJ,CACJ,mFADI,CAAN;AAGD;;AAED,WAAO,IAAIhB,0BAAJ,CAA+B,KAAKW,UAApC,EAAgDC,IAAhD,CAAP;AACD;;AAzCsE,C,CA4CzE;;AACAX,+BAA+B,CAACG,4BAAD,CAA/B","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { generateFirestoreId, isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, {\n  provideCollectionReferenceClass,\n} from './FirestoreDocumentReference';\nimport FirestoreQuery from './FirestoreQuery';\nimport FirestoreQueryModifiers from './FirestoreQueryModifiers';\n\nexport default class FirestoreCollectionReference extends FirestoreQuery {\n  constructor(firestore, collectionPath) {\n    super(firestore, collectionPath, new FirestoreQueryModifiers());\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parent = this._collectionPath.parent();\n    if (!parent) {\n      return null;\n    }\n    return new FirestoreDocumentReference(this._firestore, parent);\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  add(data) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().collection().add(*) 'data' must be an object.\");\n    }\n\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || generateFirestoreId();\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error(\n        \"firebase.firestore().collection().doc(*) 'documentPath' must point to a document.\",\n      );\n    }\n\n    return new FirestoreDocumentReference(this._firestore, path);\n  }\n}\n\n// To avoid React Native require cycle warnings\nprovideCollectionReferenceClass(FirestoreCollectionReference);\n"]},"metadata":{},"sourceType":"module"}