{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/views/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Alert, Label, FormGroup, Container, Row, Col, Card, CardBody } from 'reactstrap';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthLogo from \"../../layouts/logo/AuthLogo\";\nimport { ReactComponent as LeftBg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/bg/login-bgleft.svg\";\nimport { ReactComponent as RightBg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/bg/login-bg-right.svg\";\nimport useAuth from '../../components/authGurad/useAuth';\nimport useMounted from '../../components/authGurad/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    createUserWithEmailAndPassword\n  } = useAuth();\n  const navigate = useNavigate();\n  const initialValues = {\n    UserName: '',\n    email: '',\n    password: '',\n    policy: true,\n    submit: null,\n    acceptTerms: false\n  };\n  const validationSchema = Yup.object().shape({\n    UserName: Yup.string().required('UserName is required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginBox\",\n    children: [/*#__PURE__*/_jsxDEV(LeftBg, {\n      className: \"position-absolute left bottom-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightBg, {\n      className: \"position-absolute end-0 top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"h-100\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center align-items-center h-100\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"12\",\n          className: \"loginContainer\",\n          children: [/*#__PURE__*/_jsxDEV(AuthLogo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"p-4 m-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"pb-4 d-block\",\n                children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/auth/login\",\n                  className: \"text-decoration-none\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: initialValues,\n                validationSchema: validationSchema,\n                onSubmit: async (values, _ref) => {\n                  let {\n                    setErrors,\n                    setStatus,\n                    setSubmitting\n                  } = _ref;\n\n                  try {\n                    await createUserWithEmailAndPassword(values.email, values.password);\n                    navigate('/auth/login');\n\n                    if (mounted.current) {\n                      setStatus({\n                        success: true\n                      });\n                      setSubmitting(true);\n                    }\n                  } catch (err) {\n                    if (mounted.current) {\n                      setStatus({\n                        success: false\n                      });\n                      setErrors({\n                        submit: err.message\n                      });\n                      setSubmitting(false);\n                    }\n                  }\n                },\n                children: _ref2 => {\n                  let {\n                    errors,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"firstName\",\n                        children: \"User Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"UserName\",\n                        type: \"text\",\n                        className: `form-control ${errors.UserName && touched.UserName ? ' is-invalid' : ''}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"UserName\",\n                        component: \"div\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"email\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"email\",\n                        type: \"text\",\n                        value: values.email,\n                        onChange: handleChange,\n                        className: `form-control${errors.email && touched.email ? ' is-invalid' : ''}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"email\",\n                        component: \"div\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"password\",\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"password\",\n                        type: \"password\",\n                        value: values.password,\n                        onChange: handleChange,\n                        className: `form-control${errors.password && touched.password ? ' is-invalid' : ''}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"password\",\n                        component: \"div\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      inline: true,\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        type: \"checkbox\",\n                        name: \"acceptTerms\",\n                        id: \"acceptTerms\",\n                        className: `form-check-input ${errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : ''}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"acceptTerms\",\n                        className: \"form-check-label\",\n                        children: \"Accept Terms & Conditions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"acceptTerms\",\n                        component: \"div\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this), errors.submit ? /*#__PURE__*/_jsxDEV(Alert, {\n                      color: \"danger\",\n                      children: [errors.submit, errors.policy]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, this) : '', /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"me-2\",\n                        disabled: isSubmitting,\n                        children: \"Register\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        children: \"Reset\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"8lNsXP5YXGb+9odlUjk2DaDq/PQ=\", false, function () {\n  return [useMounted, useAuth, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/views/auth/Register.js"],"names":["React","Button","Alert","Label","FormGroup","Container","Row","Col","Card","CardBody","Formik","Field","Form","ErrorMessage","Yup","Link","useNavigate","AuthLogo","useAuth","useMounted","Register","mounted","createUserWithEmailAndPassword","navigate","initialValues","UserName","email","password","policy","submit","acceptTerms","validationSchema","object","shape","string","required","min","bool","oneOf","values","setErrors","setStatus","setSubmitting","current","success","err","message","errors","handleChange","handleSubmit","isSubmitting","touched"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Alert, Label, FormGroup, Container, Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport AuthLogo from \"../../layouts/logo/AuthLogo\";\r\nimport { ReactComponent as LeftBg } from '../../assets/images/bg/login-bgleft.svg';\r\nimport { ReactComponent as RightBg } from '../../assets/images/bg/login-bg-right.svg';\r\nimport useAuth from '../../components/authGurad/useAuth';\r\nimport useMounted from '../../components/authGurad/useMounted';\r\n\r\nconst Register = () => {\r\n  const mounted = useMounted();\r\n  const { createUserWithEmailAndPassword } = useAuth();\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    UserName: '',\r\n    email: '',\r\n    password: '',\r\n    policy: true,\r\n    submit: null,\r\n    acceptTerms: false,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    UserName: Yup.string().required('UserName is required'),\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required'),\r\n  });\r\n\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <LeftBg className=\"position-absolute left bottom-0\" />\r\n      <RightBg className=\"position-absolute end-0 top\" />\r\n      <Container fluid className=\"h-100\">\r\n        <Row className=\"justify-content-center align-items-center h-100\">\r\n          <Col lg=\"12\" className=\"loginContainer\">\r\n            <AuthLogo />\r\n            <Card>\r\n              <CardBody className=\"p-4 m-1\">\r\n                <h5 className=\"mb-0\">Register</h5>\r\n                <small className=\"pb-4 d-block\">\r\n                  Already have an account?{' '}\r\n                  <Link to=\"/auth/login\" className=\"text-decoration-none\">\r\n                    Login\r\n                  </Link>\r\n                </small>\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                      await createUserWithEmailAndPassword(values.email, values.password);\r\n                      navigate('/auth/login');\r\n                      if (mounted.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(true);\r\n                      }\r\n                    } catch (err) {\r\n                      if (mounted.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {({ errors, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"firstName\">User Name</Label>\r\n                        <Field\r\n                          name=\"UserName\"\r\n                          type=\"text\"\r\n                          className={`form-control ${\r\n                            errors.UserName && touched.UserName ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"UserName\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          value={values.email}\r\n                          onChange={handleChange}\r\n                          className={`form-control${\r\n                            errors.email && touched.email ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          onChange={handleChange}\r\n                          className={`form-control${\r\n                            errors.password && touched.password ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup inline className=\"form-check\">\r\n                        <Field\r\n                          type=\"checkbox\"\r\n                          name=\"acceptTerms\"\r\n                          id=\"acceptTerms\"\r\n                          className={`form-check-input ${\r\n                            errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <Label htmlFor=\"acceptTerms\" className=\"form-check-label\">\r\n                          Accept Terms & Conditions\r\n                        </Label>\r\n                        <ErrorMessage\r\n                          name=\"acceptTerms\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      {errors.submit ? (\r\n                        <Alert color=\"danger\">\r\n                          {errors.submit}\r\n                          {errors.policy}\r\n                        </Alert>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                      <FormGroup>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          color=\"primary\"\r\n                          className=\"me-2\"\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          Register\r\n                        </Button>\r\n                        <Button type=\"reset\" color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}