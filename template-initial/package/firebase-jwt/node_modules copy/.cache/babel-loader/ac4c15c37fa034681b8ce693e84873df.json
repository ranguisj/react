{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/layouts/customizer/Customizer.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, ButtonGroup, Row } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SimpleBar from 'simplebar-react';\nimport PropTypes from 'prop-types';\nimport { ChangeTopbarColor, ToggleCustomizer, ChangeDirection, ChangeDarkMode, ChangeSidebarColor, ToggleTopbar, FixedSidebar, ToggleHorizontal } from '../../store/customizer/CustomizerSlice';\nimport { ColorsBg, SidebarColorsBg } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Customizer = _ref => {\n  _s();\n\n  let {\n    className\n  } = _ref;\n  const dispatch = useDispatch();\n  const topbarColor = useSelector(state => state.customizer.topbarBg);\n  const direction = useSelector(state => state.customizer.isRTL);\n  const customtoggle = useSelector(state => state.customizer.customizerSidebar);\n  const isDarkMode = useSelector(state => state.customizer.isDark);\n  const activeSidebarBg = useSelector(state => state.customizer.sidebarBg);\n  const topbarFixed = useSelector(state => state.customizer.isTopbarFixed);\n  const isSidebarFixed = useSelector(state => state.customizer.isSidebarFixed);\n  const LayoutHorizontal = useSelector(state => state.customizer.isLayoutHorizontal);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: `customizerSidebar shadow ${className}`,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0\",\n            children: \"Theme Customizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Customize & Preview in Real Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleBar, {\n          style: {\n            height: 'calc(100vh - 85px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              className: \"custombtn\",\n              onClick: () => dispatch(ToggleCustomizer()),\n              children: customtoggle ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-gear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Topbar Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: ColorsBg.map(colorbg => /*#__PURE__*/_jsxDEV(Button, {\n                color: colorbg.bg,\n                size: \"sm\",\n                onClick: () => dispatch(ChangeTopbarColor(`${colorbg.bg}`)),\n                children: topbarColor === colorbg.bg ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)\n              }, colorbg.bg, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Change Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                outline: !!direction,\n                color: \"primary\",\n                size: \"sm\",\n                onClick: () => dispatch(ChangeDirection(false)),\n                children: \"LTR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"sm\",\n                outline: !direction,\n                onClick: () => dispatch(ChangeDirection(true)),\n                children: \"RTL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Change Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                outline: !!isDarkMode,\n                color: \"primary\",\n                size: \"sm\",\n                onClick: () => dispatch(ChangeDarkMode(false)) && window.location.reload(false),\n                children: \"Light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"sm\",\n                outline: !isDarkMode,\n                onClick: () => dispatch(ChangeDarkMode(true)),\n                children: \"Dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Change Layout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                outline: !!LayoutHorizontal,\n                color: \"primary\",\n                size: \"sm\",\n                onClick: () => dispatch(ToggleHorizontal(false)),\n                children: \"Vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"sm\",\n                outline: !LayoutHorizontal,\n                onClick: () => dispatch(ToggleHorizontal(true)),\n                children: \"Horziontal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Change sidebar Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: SidebarColorsBg.map(colorbg => /*#__PURE__*/_jsxDEV(Button, {\n                color: colorbg.bg,\n                size: \"sm\",\n                onClick: () => dispatch(ChangeSidebarColor(`${colorbg.bg}`)),\n                children: activeSidebarBg === colorbg.bg ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)\n              }, colorbg.bg, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Topbar Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                outline: !!topbarFixed,\n                color: \"primary\",\n                size: \"sm\",\n                onClick: () => dispatch(ToggleTopbar(false)),\n                children: \"Static\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"sm\",\n                outline: !topbarFixed,\n                onClick: () => dispatch(ToggleTopbar(true)),\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Sidebar Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                outline: !!isSidebarFixed,\n                color: \"primary\",\n                size: \"sm\",\n                onClick: () => dispatch(FixedSidebar(false)),\n                children: \"Static\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"sm\",\n                outline: !isSidebarFixed,\n                onClick: () => dispatch(FixedSidebar(true)),\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Customizer, \"ptTADSzg0kTfEUMmdiE3Uq/DtEM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Customizer;\nCustomizer.propTypes = {\n  className: PropTypes.string\n};\nexport default Customizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customizer\");","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/layouts/customizer/Customizer.js"],"names":["Button","Col","ButtonGroup","Row","useDispatch","useSelector","SimpleBar","PropTypes","ChangeTopbarColor","ToggleCustomizer","ChangeDirection","ChangeDarkMode","ChangeSidebarColor","ToggleTopbar","FixedSidebar","ToggleHorizontal","ColorsBg","SidebarColorsBg","Customizer","className","dispatch","topbarColor","state","customizer","topbarBg","direction","isRTL","customtoggle","customizerSidebar","isDarkMode","isDark","activeSidebarBg","sidebarBg","topbarFixed","isTopbarFixed","isSidebarFixed","LayoutHorizontal","isLayoutHorizontal","height","map","colorbg","bg","window","location","reload","propTypes","string"],"mappings":"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","sourcesContent":["import { Button, Col, ButtonGroup, Row } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SimpleBar from 'simplebar-react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ChangeTopbarColor,\r\n  ToggleCustomizer,\r\n  ChangeDirection,\r\n  ChangeDarkMode,\r\n  ChangeSidebarColor,\r\n  ToggleTopbar,\r\n  FixedSidebar,\r\n  ToggleHorizontal,\r\n} from '../../store/customizer/CustomizerSlice';\r\nimport { ColorsBg, SidebarColorsBg } from './data';\r\n\r\nconst Customizer = ({ className }) => {\r\n  const dispatch = useDispatch();\r\n  const topbarColor = useSelector((state) => state.customizer.topbarBg);\r\n  const direction = useSelector((state) => state.customizer.isRTL);\r\n  const customtoggle = useSelector((state) => state.customizer.customizerSidebar);\r\n  const isDarkMode = useSelector((state) => state.customizer.isDark);\r\n  const activeSidebarBg = useSelector((state) => state.customizer.sidebarBg);\r\n  const topbarFixed = useSelector((state) => state.customizer.isTopbarFixed);\r\n  const isSidebarFixed = useSelector((state) => state.customizer.isSidebarFixed);\r\n  const LayoutHorizontal = useSelector((state) => state.customizer.isLayoutHorizontal);\r\n\r\n  return (\r\n    <aside className={`customizerSidebar shadow ${className}`}>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"p-3 border-bottom\">\r\n            <h5 className=\"mb-0\">Theme Customizer</h5>\r\n            <small>Customize & Preview in Real Time</small>\r\n          </div>\r\n          <SimpleBar style={{ height: 'calc(100vh - 85px)' }}>\r\n            <div className=\"p-3\">\r\n              <br />\r\n              <Button\r\n                color=\"danger\"\r\n                className=\"custombtn\"\r\n                onClick={() => dispatch(ToggleCustomizer())}\r\n              >\r\n                {customtoggle ? <i className=\"bi bi-x\" /> : <i className=\"bi bi-gear\" />}\r\n              </Button>\r\n              <h6>Topbar Color</h6>\r\n              <div className=\"button-group\">\r\n                {ColorsBg.map((colorbg) => (\r\n                  <Button\r\n                    color={colorbg.bg}\r\n                    key={colorbg.bg}\r\n                    size=\"sm\"\r\n                    onClick={() => dispatch(ChangeTopbarColor(`${colorbg.bg}`))}\r\n                  >\r\n                    {topbarColor === colorbg.bg ? (\r\n                      <i className=\"bi bi-check\" />\r\n                    ) : (\r\n                      <i className=\"bi bi-circle\" />\r\n                    )}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <br />\r\n\r\n              <h6>Change Direction</h6>\r\n              <ButtonGroup>\r\n                <Button\r\n                  outline={!!direction}\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(ChangeDirection(false))}\r\n                >\r\n                  LTR\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline={!direction}\r\n                  onClick={() => dispatch(ChangeDirection(true))}\r\n                >\r\n                  RTL\r\n                </Button>\r\n              </ButtonGroup>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h6>Change Mode</h6>\r\n              <ButtonGroup>\r\n                <Button\r\n                  outline={!!isDarkMode}\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(ChangeDarkMode(false)) && window.location.reload(false)}\r\n                >\r\n                  Light\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline={!isDarkMode}\r\n                  onClick={() => dispatch(ChangeDarkMode(true))}\r\n                >\r\n                  Dark\r\n                </Button>\r\n              </ButtonGroup>\r\n              <br />\r\n              <br />\r\n              <h6>Change Layout</h6>\r\n              <ButtonGroup>\r\n                <Button\r\n                  outline={!!LayoutHorizontal}\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(ToggleHorizontal(false))}\r\n                >\r\n                  Vertical\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline={!LayoutHorizontal}\r\n                  onClick={() => dispatch(ToggleHorizontal(true))}\r\n                >\r\n                  Horziontal\r\n                </Button>\r\n              </ButtonGroup>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h6>Change sidebar Color</h6>\r\n              <div className=\"button-group\">\r\n                {SidebarColorsBg.map((colorbg) => (\r\n                  <Button\r\n                    color={colorbg.bg}\r\n                    key={colorbg.bg}\r\n                    size=\"sm\"\r\n                    onClick={() => dispatch(ChangeSidebarColor(`${colorbg.bg}`))}\r\n                  >\r\n                    {activeSidebarBg === colorbg.bg ? (\r\n                      <i className=\"bi bi-check\" />\r\n                    ) : (\r\n                      <i className=\"bi bi-circle\" />\r\n                    )}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <br />\r\n\r\n              <h6>Topbar Type</h6>\r\n\r\n              <ButtonGroup>\r\n                <Button\r\n                  outline={!!topbarFixed}\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(ToggleTopbar(false))}\r\n                >\r\n                  Static\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline={!topbarFixed}\r\n                  onClick={() => dispatch(ToggleTopbar(true))}\r\n                >\r\n                  Fixed\r\n                </Button>\r\n              </ButtonGroup>\r\n              <br />\r\n              <br />\r\n              <h6>Sidebar Type</h6>\r\n\r\n              <ButtonGroup>\r\n                <Button\r\n                  outline={!!isSidebarFixed}\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(FixedSidebar(false))}\r\n                >\r\n                  Static\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  outline={!isSidebarFixed}\r\n                  onClick={() => dispatch(FixedSidebar(true))}\r\n                >\r\n                  Fixed\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </SimpleBar>\r\n        </Col>\r\n      </Row>\r\n    </aside>\r\n  );\r\n};\r\nCustomizer.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Customizer;\r\n"]},"metadata":{},"sourceType":"module"}