{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error('firebase.firestore.GeoPoint constructor expected latitude and longitude values.');\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(`firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`);\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(`firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`);\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\");\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n\n}","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/node_modules/@react-native-firebase/firestore/lib/FirestoreGeoPoint.js"],"names":["isFinite","isNumber","isUndefined","FirestoreGeoPoint","constructor","latitude","longitude","Error","_latitude","_longitude","isEqual","other"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,uCAAhD;AAEA,eAAe,MAAMC,iBAAN,CAAwB;AACrCC,EAAAA,WAAW,CAACC,QAAD,EAAWC,SAAX,EAAsB;AAC/B,QAAIJ,WAAW,CAACG,QAAD,CAAX,IAAyBH,WAAW,CAACI,SAAD,CAAxC,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;AAGD;;AAED,QAAI,CAACN,QAAQ,CAACI,QAAD,CAAb,EAAyB;AACvB,YAAM,IAAIE,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,QAAI,CAACN,QAAQ,CAACK,SAAD,CAAb,EAA0B;AACxB,YAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACD;;AAED,QAAI,CAACP,QAAQ,CAACK,QAAD,CAAT,IAAuBA,QAAQ,GAAG,CAAC,EAAnC,IAAyCA,QAAQ,GAAG,EAAxD,EAA4D;AAC1D,YAAM,IAAIE,KAAJ,CACH,wFAAuFF,QAAS,GAD7F,CAAN;AAGD;;AAED,QAAI,CAACL,QAAQ,CAACM,SAAD,CAAT,IAAwBA,SAAS,GAAG,CAAC,GAArC,IAA4CA,SAAS,GAAG,GAA5D,EAAiE;AAC/D,YAAM,IAAIC,KAAJ,CACH,2FAA0FD,SAAU,GADjG,CAAN;AAGD;;AAED,SAAKE,SAAL,GAAiBH,QAAjB;AACA,SAAKI,UAAL,GAAkBH,SAAlB;AACD;;AAEW,MAARD,QAAQ,GAAG;AACb,WAAO,KAAKG,SAAZ;AACD;;AAEY,MAATF,SAAS,GAAG;AACd,WAAO,KAAKG,UAAZ;AACD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,QAAI,EAAEA,KAAK,YAAYR,iBAAnB,CAAJ,EAA2C;AACzC,YAAM,IAAII,KAAJ,CACJ,kFADI,CAAN;AAGD;;AAED,WAAO,KAAKC,SAAL,KAAmBG,KAAK,CAACH,SAAzB,IAAsC,KAAKC,UAAL,KAAoBE,KAAK,CAACF,UAAvE;AACD;;AAhDoC","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error(\n        'firebase.firestore.GeoPoint constructor expected latitude and longitude values.',\n      );\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`,\n      );\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`,\n      );\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\n        \"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\",\n      );\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}