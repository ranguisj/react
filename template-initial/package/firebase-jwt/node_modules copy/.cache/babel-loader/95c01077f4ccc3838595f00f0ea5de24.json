{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/layouts/logo/HorizontalLogo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { ReactComponent as LogoDarkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/logos/dark-logo-icon.svg\";\nimport { ReactComponent as LogoDarkText } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/logos/dark-logo-text.svg\";\nimport { ReactComponent as LogoWhiteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/logos/white-logo-icon.svg\";\nimport { ReactComponent as LogoWhiteText } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/logos/white-logo-text.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HorizontalLogo = () => {\n  _s();\n\n  const isDarkMode = useSelector(state => state.customizer.isDark);\n  const activetopbarBg = useSelector(state => state.customizer.topbarBg);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/\",\n    className: \"d-flex align-items-center gap-2\",\n    children: isDarkMode || activetopbarBg !== 'white' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LogoWhiteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LogoWhiteText, {\n        className: \"d-none d-lg-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LogoDarkIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LogoDarkText, {\n        className: \"d-none d-lg-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HorizontalLogo, \"uAy+3fJGa1w1GmR5P6uOAMFpbn4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = HorizontalLogo;\nexport default HorizontalLogo;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalLogo\");","map":{"version":3,"sources":["/Users/jeremyranguis/greatwanderline/package/firebase-jwt/src/layouts/logo/HorizontalLogo.js"],"names":["useSelector","Link","React","HorizontalLogo","isDarkMode","state","customizer","isDark","activetopbarBg","topbarBg"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;AAMA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,UAAU,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,MAA7B,CAA9B;AACA,QAAMC,cAAc,GAAGR,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBG,QAA7B,CAAlC;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,iCAAvB;AAAA,cACGL,UAAU,IAAII,cAAc,KAAK,OAAjC,gBACC;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADD,gBAMC;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBD;;GAAML,c;UACeH,W,EACIA,W;;;KAFnBG,c;AAoBN,eAAeA,cAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { ReactComponent as LogoDarkIcon } from '../../assets/images/logos/dark-logo-icon.svg';\r\nimport { ReactComponent as LogoDarkText } from '../../assets/images/logos/dark-logo-text.svg';\r\nimport { ReactComponent as LogoWhiteIcon } from '../../assets/images/logos/white-logo-icon.svg';\r\nimport { ReactComponent as LogoWhiteText } from '../../assets/images/logos/white-logo-text.svg';\r\n\r\nconst HorizontalLogo = () => {\r\n  const isDarkMode = useSelector((state) => state.customizer.isDark);\r\n  const activetopbarBg = useSelector((state) => state.customizer.topbarBg);\r\n  return (\r\n    <Link to=\"/\" className=\"d-flex align-items-center gap-2\">\r\n      {isDarkMode || activetopbarBg !== 'white' ? (\r\n        <>\r\n          <LogoWhiteIcon />\r\n          <LogoWhiteText className=\"d-none d-lg-block\" />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <LogoDarkIcon />\r\n          <LogoDarkText className=\"d-none d-lg-block\" />\r\n        </>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalLogo;\r\n"]},"metadata":{},"sourceType":"module"}